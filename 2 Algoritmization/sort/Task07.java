package by.jonline.algoritmization.sort;

import java.util.Random;

/**
 * @author Sergey Klimuk
 *
 *   	2. Algoritmization
 *   
 *   	Одномерные массивы. Сортировка
 *
 *   	Задание 7
 *	
 *		Пусть даны две неубывающие последовательности действительных чисел
 * a1 <= a2 <= ... <= an   и    b1 <= b2 <= ... <= bm. Требуется указать 
 * те места, на которые нужно вставлять элементы последовательности 
 * b1 <= b2 <= ... <= bm    в первую последовательность так, чтобы новая
 * последовательность осталась возрастающей.
 *
 * Для выполнения задания будем указывать какой блок из элементов 
 * последовательности b нужно вставить перед каким элементом
 * последовательности a. Например: Элементы: b0 b1 b2 вставляем перед 
 * элементом a0, элементы: b3 b4 вставляем перед элементом a2. Т.е.
 * полученная последовательность будет начинаться таким образом
 *   b0 <= b1 <= b2 <= a0 <= a1 <= b3 <= b4 <= a2 ... и т.д.
 *
 *	
 */

public class Task07 {

	public static void main(String[] args) {

        // Размерности массивов
        int n = 10;
        int m = 10;

        // Создаем массивы
        double[] a = getArray(n);
        double[] b = getArray(m);

        // Выводим массивы на экран
        System.out.print("Последовательность 'a':\n");
        printArray(a, "a");
        System.out.print("Последовательность 'b':\n");
        printArray(b, "b");
        System.out.println();

        int i = 0;// Текущая позиция последовательности 'a'
        int j = 0;// Текущая позиция последовательности 'b'
        int count = 0;// Счетчик элементов 'b' которые необходимо записать перед соответствующим 'ai'

        // Начинаем с позиции a0, b0.
        // Для всех элементов 'b' cравниваем текущие элементы ai и bj.
        // Если bj > ai, то переходим к следующему элементу 'a' и продолжаем проверку.
        // Если это был последний элемент 'a', то выводим оставшиеся элементы 'b' в конец 'a'.
        // Если bj < ai и b(j+1) < ai, увеличиваем значение счетчика элементов 'b' count на 1 и
        // перейдя к следующему элементу 'b', продолжаем проверку.
        // Если bj < ai и b(j+1) > ai или не существует, то записываем блок элементов 'b' с позиции
        // (j - count) до j перед элементом ai и переходим к следующему элементу 'b'.
        while (j < b.length) {
            if (b[j] >= a[i]) {
                i++;
                if (i >= a.length) {
                    for (int k = j; k < b.length; k++) {
                        System.out.print(" b" + k);
                    }
                    System.out.print(" вставляем в конец последовательности 'a'");
                    break;
                }
                continue;
            } else {
                if (j == (b.length - 1) || b[j + 1] >= a[i]) {
                    for (int k = j - count; k <= j; k++) {
                        System.out.print(" b" + k);
                    }
                    System.out.print(" вставляем перед элементом a" + i + "\n");
                    count = 0;
                    j++;
                    continue;
                } else {
                    j++;
                    count++;
                }
            }
        }
    }

    // Создание неубывающей последовательности
    static double[] getArray(int n) {
        Random rand = new Random();
        double[] array = new double[n];
        array[0] = rand.nextDouble() * 21 - 15;
        for (int i = 1; i < n; i++) {
            array[i] = array[i - 1] + rand.nextDouble() * 5;
        }
        return array;
    }

    static void printArray(double[] array, String name) {
        for (int i = 0; i < array.length; i++) {
            System.out.print("(" + name + i + ")");
            System.out.printf("%.2f; ", array[i]);
        }
        System.out.println();
    }
}

/*
   Результат работы программы:

Последовательность 'a':
(a0)-5,25; (a1)-2,60; (a2)-1,46; (a3)3,50; (a4)7,17; (a5)8,77; (a6)12,00; (a7)16,47; (a8)17,34; (a9)20,39; 
Последовательность 'b':
(b0)0,17; (b1)2,72; (b2)4,99; (b3)9,56; (b4)13,88; (b5)14,58; (b6)19,48; (b7)20,68; (b8)23,48; (b9)28,27; 

 b0 b1 вставляем перед элементом a3
 b2 вставляем перед элементом a4
 b3 вставляем перед элементом a6
 b4 b5 вставляем перед элементом a7
 b6 вставляем перед элементом a9
 b7 b8 b9 вставляем в конец последовательности 'a'

 */